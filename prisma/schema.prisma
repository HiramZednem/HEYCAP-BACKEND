generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model dislikes {
  dislike_id Int     @id @default(autoincrement())
  user_id    Int
  place_id   Int
  place     places @relation(fields: [place_id], references: [place_id], onDelete: NoAction, onUpdate: NoAction)
  user      users  @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model likes {
  like_id  Int     @id @default(autoincrement())
  user_id  Int
  place_id Int
  place   places @relation(fields: [place_id], references: [place_id], onDelete: NoAction, onUpdate: NoAction)
  user    users  @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model places {
  place_id Int        @id @default(autoincrement())
  uuid     String     @unique @default(dbgenerated("gen_random_uuid()")) @db.VarChar
  name     String     @db.VarChar
  dislikes dislikes[]
  likes    likes[]
}

model users {
  user_id         Int           @id @default(autoincrement())
  uuid            String        @unique @default(dbgenerated("gen_random_uuid()")) @db.VarChar
  name            String        @db.VarChar(50)
  last_name       String        @db.VarChar(50)
  nickname        String        @unique @db.VarChar(50)
  email           String        @unique @db.VarChar
  password        String        @db.VarChar
  phone           String        @unique @db.VarChar(10)
  phoneVerified   Boolean?      @default(false)
  avatar          String?       @db.VarChar
  created_at      DateTime?     @default(now()) @db.Timestamp(6)
  dislikes        dislikes[]
  itineraries     itineraries[]
  likes           likes[]
  code            codes?        

}


model codes {
  code_id        Int      @id @default(autoincrement())
  code           String   @db.VarChar(4)    // Código numérico o string de 4 caracteres
  code_type      CodeType // Tipo de código (enum)
  created_at     DateTime @default(now()) @db.Timestamp(6)

  // Relación con el modelo "users"
  user           users    @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  user_id        Int      @unique
}
enum CodeType {
  VERIFY
  LOGIN
  RECOVERY
}

model itineraries {
  itinerarie_id Int     @id @default(autoincrement())
  uuid          String  @unique @default(dbgenerated("gen_random_uuid()")) @db.VarChar
  user_id       Int?
  name          String? @db.VarChar
  users         users?  @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}
